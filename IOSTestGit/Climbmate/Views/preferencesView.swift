//
//  preferencesView.swift
//  Climbmate
//
//  Created by kang jiyoun on 2020/11/19.
//

import SwiftUI

struct preferencesView: View {
    let preferencesItem = ["오픈소스 라이선스 확인하기"]
    
    var body: some View {
        VStack{
            List(){
                ForEach(self.preferencesItem , id:\.self){ item in
                    NavigationLink(destination: openSourceListView()){
                        Text(item)
                    }
                   
                }
            }
        }.navigationTitle("환경설정")
    }
}

struct preferencesView_Previews: PreviewProvider {
    static var previews: some View {
        openSourceListView()
    }
}



struct openSourceListView : View {
    
    let openSourceItem = [
        openSourceModel(openSourceName: "Alamofire", openSourceURL: "https://github.com/Alamofire/Alamofire",
                        openSourceExplanation: "Copyright (c) 2014-2020 Alamofire Software Foundation (http://alamofire.org/)\(liseneceString().MitLisence)"),
        openSourceModel(openSourceName: "Firebase", openSourceURL: nil,
                        openSourceExplanation: "\(liseneceString().FirebaseApacheLicencs)"),
        openSourceModel(openSourceName: "FirebaseAnalytics", openSourceURL: nil,
                        openSourceExplanation: "\(liseneceString().FirebaseApacheLicencs)"),
        openSourceModel(openSourceName: "FirebaseCoreDiagnostics", openSourceURL: nil,
                        openSourceExplanation: "\(liseneceString().FirebaseApacheLicencs)"),
        openSourceModel(openSourceName: "FirebaseInstallations", openSourceURL: nil,
                        openSourceExplanation: "\(liseneceString().FirebaseApacheLicencs)"),
        openSourceModel(openSourceName: "FirebaseInstanceID", openSourceURL: nil,
                        openSourceExplanation: "\(liseneceString().FirebaseApacheLicencs)"),
        openSourceModel(openSourceName: "FirebaseMessaging", openSourceURL: nil,
                        openSourceExplanation: "\(liseneceString().FirebaseApacheLicencs)"),
        openSourceModel(openSourceName: "GoogleAppMeasurement", openSourceURL: nil,
                        openSourceExplanation: "\(liseneceString().FirebaseApacheLicencs)"),
        openSourceModel(openSourceName: "GoogleDataTransport", openSourceURL: nil,
                        openSourceExplanation: "\(liseneceString().FirebaseApacheLicencs)"),
        openSourceModel(openSourceName: "GoogleUtilities", openSourceURL: nil,
                        openSourceExplanation: "\(liseneceString().FirebaseApacheLicencs)"),
        openSourceModel(openSourceName: "PromisesObjC", openSourceURL: nil,
                        openSourceExplanation: "\(liseneceString().FirebaseApacheLicencs)"),
        openSourceModel(openSourceName: "Protobuf", openSourceURL: "https://github.com/protocolbuffers/protobuf",
                        openSourceExplanation: "Copyright 2008 Google Inc.  All rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are\nmet:\n\n* Redistributions of source code must retain the above copyright\n\nnotice, this list of conditions and the following disclaimer.\n\n* Redistributions in binary form must reproduce the above\ncopyright notice, this list of conditions and the following disclaimer\nin the documentation and/or other materials provided with the\ndistribution.\n* Neither the name of Google Inc. nor the names of its\ncontributors may be used to endorse or promote products derived from\nthis software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\nLIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\nA PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\nOWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\nSPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\nLIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\nDATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\nTHEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nCode generated by the Protocol Buffer compiler is owned by the owner\nof the input file used when generating it.  This code is not\nstandalone and requires a support library to be linked with it.  This\nsupport library is itself covered by the above license."),
        openSourceModel(openSourceName: "SDWebImage", openSourceURL: "https://github.com/SDWebImage/SDWebImage",
                        openSourceExplanation: "Copyright (c) 2019 lizhuoli1126@126.com <lizhuoli1126@126.com>\(liseneceString().MitLisence)"),
        openSourceModel(openSourceName: "SwiftyJSON", openSourceURL: "https://github.com/SwiftyJSON/SwiftyJSON",
                        openSourceExplanation: "The MIT License (MIT) Copyright (c) 2017 Ruoyu Fu\(liseneceString().MitLisence)"),
        openSourceModel(openSourceName: "Lightbox", openSourceURL: "https://github.com/hyperoslo/Lightbox",
                        openSourceExplanation: "Copyright (c) 2015 Hyper Interaktiv AS \n\(liseneceString().MitLisence)")
    ]
    
    
    var body: some View{
        List(){
            ForEach(self.openSourceItem){ item in
                NavigationLink(destination: openSourceView(openSource: item)){
                    Text(item.openSourceName)
                }
            }
        }.navigationBarTitle(Text("Open Source"), displayMode: .inline)
        
    }
}

struct openSourceView : View {
    let openSource : openSourceModel
    var body: some View{
        ScrollView{
            VStack{
                Text(self.openSource.openSourceExplanation)
                    .font(.system(size: 12))
                if(self.openSource.openSourceURL != nil){
                    NavigationLink(destination:
                        webViewModel(urlToLoad: self.openSource.openSourceURL!)
                    , label: {
                        VStack(alignment: .leading){
                            HStack{
                                Text("\nURL :")
                                    .font(.system(size: 12))
                                Spacer()
                            }
                            HStack{
                                Text(self.openSource.openSourceURL!)
                                    .font(.system(size: 12))
                                Spacer()
                            }
                       
                        }.frame(alignment: .leading)
                    
                    })
                }
            }.padding(.horizontal,10)
          
           
            
        }.navigationTitle(self.openSource.openSourceName)
    }
}
